pipeline {
  agent any

  environment {
    SONAR_TOKEN = credentials('sonarqube') 
    IMAGE_NAME  = 'parimala20/myapp'
  }
pipeline {
  agent any

  environment {
    DOCKERHUB_CREDENTIALS = credentials('dockerhub-cred-id')
    SONAR_TOKEN = credentials('sonar-token-id')
    SONARQUBE = 'MySonarQube'
    DOCKER_IMAGE = 'yourdockerhubusername/your-image-name'
  }

  triggers {
    githubPush()
  }

 
  stages {
    stage('Checkout') {
      steps {
        git 'https://github.com/parimala607/jenkins-pipeline-.git'
      }
    }

    stage('SonarQube Scan') {
      steps {
        withSonarQubeEnv('MySonarQube') {
          sh 'sonar-scanner -Dsonar.projectKey=myapp -Dsonar.sources=./app -Dsonar.login=$SONAR_TOKEN'
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker build -t $IMAGE_NAME .'
      }
    }

    stage('Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_CREDS_USR', passwordVariable: 'DOCKER_CREDS_PSW')]) {
          sh '''
            echo "$DOCKER_CREDS_PSW" | docker login -u "$DOCKER_CREDS_USR" --password-stdin
            docker push $IMAGE_NAME
          '''
        }
      }
    }
  }
}  


   
     