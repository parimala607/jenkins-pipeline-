pipeline {
  agent any

  environment {
    SONAR_TOKEN = credentials('sonar-token-id')          // Jenkins credential ID for SonarQube token
    DOCKERHUB_CREDENTIALS = credentials('dockerhub')     // Jenkins credential ID for DockerHub
    IMAGE_NAME = 'parimala20/myapp'                      // DockerHub image name
    SONARQUBE = 'MySonarQube'                            // SonarQube server name configured in Jenkins
  }

  triggers {
    githubPush()
  }

  stages {
    stage('Checkout') {
      steps {
        git 'https://github.com/parimala607/jenkins-pipeline-.git'
      }
    }

    stage('SonarQube Scan') {
      steps {
        withSonarQubeEnv("${SONARQUBE}") {
          sh '''
            sonar-scanner \
              -Dsonar.projectKey=myapp \
              -Dsonar.sources=./app \
              -Dsonar.login=${SONAR_TOKEN}
          '''
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker build -t $IMAGE_NAME .'
      }
    }

    stage('Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
             docker push $IMAGE_NAME
          '''
        }
      }
    }
  }
}